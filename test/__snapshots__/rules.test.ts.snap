// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint rules should match defined rules for e2e.js: Applied rules 1`] = `
Object {
  "env": Object {
    "es6": true,
    "jest/globals": true,
    "node": true,
  },
  "globals": Object {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
  },
  "ignorePatterns": Array [
    "node_modules/",
  ],
  "noInlineConfig": undefined,
  "parser": StringMatching /node_modules\\\\/@typescript-eslint\\\\/parser\\\\/dist\\\\/parser\\.js/,
  "parserOptions": Object {
    "ecmaVersion": 2020,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "jest",
    "prettier",
    "@typescript-eslint",
    "import",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array",
        "readonly": "array",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "off",
    ],
    "@typescript-eslint/ban-ts-ignore": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [
          "inner_hits",
          "multi_match",
          "match_all",
          "doc_as_upsert",
        ],
        "ignoreDestructuring": false,
        "ignoreImports": false,
      },
    ],
    "@typescript-eslint/class-literal-property-style": Array [
      "error",
    ],
    "@typescript-eslint/class-name-casing": Array [
      "error",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/interface-name-prefix": Array [
      "error",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/method-signature-style": Array [
      "error",
      "property",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-base-to-string": Array [
      "error",
    ],
    "@typescript-eslint/no-dupe-class-members": Array [
      "error",
    ],
    "@typescript-eslint/no-dynamic-delete": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "off",
    ],
    "@typescript-eslint/no-require-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-type-alias": Array [
      "error",
      Object {
        "allowAliases": "always",
        "allowCallbacks": "always",
        "allowConditionalTypes": "always",
        "allowConstructors": "never",
        "allowLiterals": "in-unions",
        "allowMappedTypes": "always",
        "allowTupleTypes": "never",
      },
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-qualifier": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars-experimental": Array [
      "error",
      Object {
        "ignoreArgsIfArgsAfterAreUsed": true,
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-includes": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/prefer-nullish-coalescing": Array [
      "error",
    ],
    "@typescript-eslint/prefer-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/prefer-readonly": Array [
      "error",
    ],
    "@typescript-eslint/prefer-regexp-exec": Array [
      "error",
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": Array [
      "error",
    ],
    "@typescript-eslint/promise-function-async": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
      Object {
        "allowNumber": true,
      },
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/switch-exhaustiveness-check": Array [
      "error",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "off",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "arrow-spacing": Array [
      "error",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "callback-return": Array [
      "error",
    ],
    "camelcase": Array [
      "off",
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "error",
    ],
    "getter-return": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "handle-callback-err": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/export": Array [
      "error",
    ],
    "import/first": Array [
      "error",
    ],
    "import/named": Array [
      "error",
    ],
    "import/namespace": Array [
      "error",
    ],
    "import/newline-after-import": Array [
      "error",
    ],
    "import/no-cycle": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      "warn",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      "off",
    ],
    "import/no-named-as-default-member": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "off",
    ],
    "import/order": Array [
      "error",
      Object {
        "groups": Array [
          "builtin",
          "external",
          "internal",
          Array [
            "parent",
            "sibling",
            "index",
          ],
        ],
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": Array [
      "off",
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jest/expect-expect": Array [
      "warn",
    ],
    "jest/no-commented-out-tests": Array [
      "warn",
    ],
    "jest/no-disabled-tests": Array [
      "warn",
    ],
    "jest/no-export": Array [
      "error",
    ],
    "jest/no-focused-tests": Array [
      "error",
    ],
    "jest/no-identical-title": Array [
      "error",
    ],
    "jest/no-jasmine-globals": Array [
      "warn",
    ],
    "jest/no-jest-import": Array [
      "error",
    ],
    "jest/no-mocks-import": Array [
      "error",
    ],
    "jest/no-standalone-expect": Array [
      "error",
    ],
    "jest/no-test-callback": Array [
      "error",
    ],
    "jest/no-test-prefixes": Array [
      "error",
    ],
    "jest/no-try-expect": Array [
      "error",
    ],
    "jest/valid-describe": Array [
      "error",
    ],
    "jest/valid-expect": Array [
      "error",
    ],
    "jest/valid-expect-in-promise": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
    ],
    "no-confusing-arrow": Array [
      "off",
    ],
    "no-console": Array [
      "error",
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "error",
    ],
    "no-constructor-return": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implicit-coercion": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-requires": Array [
      "error",
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-spaces": Array [
      "error",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-process-env": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "error",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
    ],
    "no-restricted-imports": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-modules": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-return-assign": Array [
      "error",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "off",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [
          "_id",
          "_source",
        ],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "allowAfterThisConstructor": false,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
    ],
    "prefer-arrow-callback": Array [
      "error",
    ],
    "prefer-const": Array [
      "error",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "error",
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "require-atomic-updates": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "error",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
    ],
    "yoda": Array [
      "error",
      "never",
      Object {
        "exceptRange": true,
        "onlyEquality": false,
      },
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".d.ts",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": Array [
      "^@keplr/",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".d.ts",
          ".js",
          ".jsx",
        ],
      },
    },
  },
}
`;

exports[`ESLint rules should match defined rules for e2e.js: Ignored rules 1`] = `
Array [
  "accessor-pairs",
  "capitalized-comments",
  "class-methods-use-this",
  "complexity",
  "consistent-this",
  "func-name-matching",
  "func-names",
  "func-style",
  "grouped-accessor-pairs",
  "guard-for-in",
  "id-blacklist",
  "id-length",
  "id-match",
  "init-declarations",
  "line-comment-position",
  "lines-around-directive",
  "lines-between-class-members",
  "max-classes-per-file",
  "max-depth",
  "max-lines",
  "max-lines-per-function",
  "max-nested-callbacks",
  "max-params",
  "max-statements",
  "max-statements-per-line",
  "multiline-comment-style",
  "new-cap",
  "newline-after-var",
  "newline-before-return",
  "no-await-in-loop",
  "no-bitwise",
  "no-catch-shadow",
  "no-continue",
  "no-implicit-globals",
  "no-inline-comments",
  "no-invalid-this",
  "no-lonely-if",
  "no-magic-numbers",
  "no-multi-assign",
  "no-native-reassign",
  "no-negated-condition",
  "no-negated-in-lhs",
  "no-nested-ternary",
  "no-new-object",
  "no-plusplus",
  "no-process-exit",
  "no-restricted-syntax",
  "no-ternary",
  "no-unneeded-ternary",
  "no-useless-constructor",
  "no-warning-comments",
  "one-var",
  "operator-assignment",
  "prefer-destructuring",
  "prefer-exponentiation-operator",
  "prefer-named-capture-group",
  "prefer-object-spread",
  "prefer-reflect",
  "require-await",
  "require-jsdoc",
  "require-unicode-regexp",
  "sort-keys",
  "sort-vars",
  "spaced-comment",
  "valid-jsdoc",
  "@typescript-eslint/explicit-member-accessibility",
  "@typescript-eslint/explicit-module-boundary-types",
  "@typescript-eslint/generic-type-naming",
  "@typescript-eslint/member-naming",
  "@typescript-eslint/no-magic-numbers",
  "@typescript-eslint/no-parameter-properties",
  "@typescript-eslint/no-untyped-public-signature",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/typedef",
  "import/no-namespace",
  "import/extensions",
  "import/no-restricted-paths",
  "import/no-internal-modules",
  "import/group-exports",
  "import/no-relative-parent-imports",
  "import/no-self-import",
  "import/no-named-default",
  "import/no-anonymous-default-export",
  "import/no-unused-modules",
  "import/no-commonjs",
  "import/no-amd",
  "import/max-dependencies",
  "import/no-extraneous-dependencies",
  "import/no-absolute-path",
  "import/no-nodejs-modules",
  "import/no-webpack-loader-syntax",
  "import/no-default-export",
  "import/no-named-export",
  "import/no-dynamic-require",
  "import/unambiguous",
  "import/no-unassigned-import",
  "import/no-useless-path-segments",
  "import/dynamic-import-chunkname",
  "import/exports-last",
  "import/no-deprecated",
  "import/imports-first",
  "jest/consistent-test-it",
  "jest/lowercase-name",
  "jest/no-alias-methods",
  "jest/no-duplicate-hooks",
  "jest/no-expect-resolves",
  "jest/no-hooks",
  "jest/no-if",
  "jest/no-large-snapshots",
  "jest/no-test-return-statement",
  "jest/no-truthy-falsy",
  "jest/prefer-called-with",
  "jest/prefer-expect-assertions",
  "jest/prefer-hooks-on-top",
  "jest/prefer-inline-snapshots",
  "jest/prefer-spy-on",
  "jest/prefer-strict-equal",
  "jest/prefer-to-be-null",
  "jest/prefer-to-be-undefined",
  "jest/prefer-to-contain",
  "jest/prefer-to-have-length",
  "jest/prefer-todo",
  "jest/require-to-throw-message",
  "jest/require-top-level-describe",
  "jest/valid-title",
]
`;

exports[`ESLint rules should match defined rules for e2e.ts: Applied rules 1`] = `
Object {
  "env": Object {
    "es6": true,
    "jest/globals": true,
    "node": true,
  },
  "globals": Object {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
  },
  "ignorePatterns": Array [
    "node_modules/",
  ],
  "noInlineConfig": undefined,
  "parser": StringMatching /node_modules\\\\/@typescript-eslint\\\\/parser\\\\/dist\\\\/parser\\.js/,
  "parserOptions": Object {
    "ecmaVersion": 2020,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "jest",
    "prettier",
    "@typescript-eslint",
    "import",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array",
        "readonly": "array",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "off",
    ],
    "@typescript-eslint/ban-ts-ignore": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [
          "inner_hits",
          "multi_match",
          "match_all",
          "doc_as_upsert",
        ],
        "ignoreDestructuring": false,
        "ignoreImports": false,
      },
    ],
    "@typescript-eslint/class-literal-property-style": Array [
      "error",
    ],
    "@typescript-eslint/class-name-casing": Array [
      "error",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/interface-name-prefix": Array [
      "error",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/method-signature-style": Array [
      "error",
      "property",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-base-to-string": Array [
      "error",
    ],
    "@typescript-eslint/no-dupe-class-members": Array [
      "error",
    ],
    "@typescript-eslint/no-dynamic-delete": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "off",
    ],
    "@typescript-eslint/no-require-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-type-alias": Array [
      "error",
      Object {
        "allowAliases": "always",
        "allowCallbacks": "always",
        "allowConditionalTypes": "always",
        "allowConstructors": "never",
        "allowLiterals": "in-unions",
        "allowMappedTypes": "always",
        "allowTupleTypes": "never",
      },
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-qualifier": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars-experimental": Array [
      "error",
      Object {
        "ignoreArgsIfArgsAfterAreUsed": true,
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-includes": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/prefer-nullish-coalescing": Array [
      "error",
    ],
    "@typescript-eslint/prefer-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/prefer-readonly": Array [
      "error",
    ],
    "@typescript-eslint/prefer-regexp-exec": Array [
      "error",
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": Array [
      "error",
    ],
    "@typescript-eslint/promise-function-async": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
      Object {
        "allowNumber": true,
      },
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/switch-exhaustiveness-check": Array [
      "error",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "off",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "arrow-spacing": Array [
      "error",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "callback-return": Array [
      "error",
    ],
    "camelcase": Array [
      "off",
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "error",
    ],
    "getter-return": Array [
      "off",
    ],
    "global-require": Array [
      "error",
    ],
    "handle-callback-err": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/export": Array [
      "error",
    ],
    "import/first": Array [
      "error",
    ],
    "import/named": Array [
      "error",
    ],
    "import/namespace": Array [
      "error",
    ],
    "import/newline-after-import": Array [
      "error",
    ],
    "import/no-cycle": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      "warn",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      "off",
    ],
    "import/no-named-as-default-member": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "off",
    ],
    "import/order": Array [
      "error",
      Object {
        "groups": Array [
          "builtin",
          "external",
          "internal",
          Array [
            "parent",
            "sibling",
            "index",
          ],
        ],
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": Array [
      "off",
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jest/expect-expect": Array [
      "warn",
    ],
    "jest/no-commented-out-tests": Array [
      "warn",
    ],
    "jest/no-disabled-tests": Array [
      "warn",
    ],
    "jest/no-export": Array [
      "error",
    ],
    "jest/no-focused-tests": Array [
      "error",
    ],
    "jest/no-identical-title": Array [
      "error",
    ],
    "jest/no-jasmine-globals": Array [
      "warn",
    ],
    "jest/no-jest-import": Array [
      "error",
    ],
    "jest/no-mocks-import": Array [
      "error",
    ],
    "jest/no-standalone-expect": Array [
      "error",
    ],
    "jest/no-test-callback": Array [
      "error",
    ],
    "jest/no-test-prefixes": Array [
      "error",
    ],
    "jest/no-try-expect": Array [
      "error",
    ],
    "jest/valid-describe": Array [
      "error",
    ],
    "jest/valid-expect": Array [
      "error",
    ],
    "jest/valid-expect-in-promise": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
    ],
    "no-confusing-arrow": Array [
      "off",
    ],
    "no-console": Array [
      "error",
    ],
    "no-const-assign": Array [
      "off",
    ],
    "no-constant-condition": Array [
      "error",
    ],
    "no-constructor-return": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "off",
    ],
    "no-dupe-class-members": Array [
      "off",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "off",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implicit-coercion": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-requires": Array [
      "error",
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-spaces": Array [
      "error",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "off",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-process-env": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "off",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
    ],
    "no-restricted-imports": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-modules": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-return-assign": Array [
      "error",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "off",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "off",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "off",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [
          "_id",
          "_source",
        ],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "allowAfterThisConstructor": false,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unreachable": Array [
      "off",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
    ],
    "prefer-arrow-callback": Array [
      "error",
    ],
    "prefer-const": Array [
      "error",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "error",
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "require-atomic-updates": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "off",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
    ],
    "yoda": Array [
      "error",
      "never",
      Object {
        "exceptRange": true,
        "onlyEquality": false,
      },
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".d.ts",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": Array [
      "^@keplr/",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".d.ts",
          ".js",
          ".jsx",
        ],
      },
    },
  },
}
`;

exports[`ESLint rules should match defined rules for e2e.ts: Ignored rules 1`] = `
Array [
  "accessor-pairs",
  "capitalized-comments",
  "class-methods-use-this",
  "complexity",
  "consistent-this",
  "func-name-matching",
  "func-names",
  "func-style",
  "grouped-accessor-pairs",
  "guard-for-in",
  "id-blacklist",
  "id-length",
  "id-match",
  "init-declarations",
  "line-comment-position",
  "lines-around-directive",
  "lines-between-class-members",
  "max-classes-per-file",
  "max-depth",
  "max-lines",
  "max-lines-per-function",
  "max-nested-callbacks",
  "max-params",
  "max-statements",
  "max-statements-per-line",
  "multiline-comment-style",
  "new-cap",
  "newline-after-var",
  "newline-before-return",
  "no-await-in-loop",
  "no-bitwise",
  "no-catch-shadow",
  "no-continue",
  "no-implicit-globals",
  "no-inline-comments",
  "no-invalid-this",
  "no-lonely-if",
  "no-magic-numbers",
  "no-multi-assign",
  "no-native-reassign",
  "no-negated-condition",
  "no-negated-in-lhs",
  "no-nested-ternary",
  "no-new-object",
  "no-plusplus",
  "no-process-exit",
  "no-restricted-syntax",
  "no-ternary",
  "no-unneeded-ternary",
  "no-useless-constructor",
  "no-warning-comments",
  "one-var",
  "operator-assignment",
  "prefer-destructuring",
  "prefer-exponentiation-operator",
  "prefer-named-capture-group",
  "prefer-object-spread",
  "prefer-reflect",
  "require-await",
  "require-jsdoc",
  "require-unicode-regexp",
  "sort-keys",
  "sort-vars",
  "spaced-comment",
  "valid-jsdoc",
  "@typescript-eslint/explicit-member-accessibility",
  "@typescript-eslint/explicit-module-boundary-types",
  "@typescript-eslint/generic-type-naming",
  "@typescript-eslint/member-naming",
  "@typescript-eslint/no-magic-numbers",
  "@typescript-eslint/no-parameter-properties",
  "@typescript-eslint/no-untyped-public-signature",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/typedef",
  "import/no-namespace",
  "import/extensions",
  "import/no-restricted-paths",
  "import/no-internal-modules",
  "import/group-exports",
  "import/no-relative-parent-imports",
  "import/no-self-import",
  "import/no-named-default",
  "import/no-anonymous-default-export",
  "import/no-unused-modules",
  "import/no-commonjs",
  "import/no-amd",
  "import/max-dependencies",
  "import/no-extraneous-dependencies",
  "import/no-absolute-path",
  "import/no-nodejs-modules",
  "import/no-webpack-loader-syntax",
  "import/no-default-export",
  "import/no-named-export",
  "import/no-dynamic-require",
  "import/unambiguous",
  "import/no-unassigned-import",
  "import/no-useless-path-segments",
  "import/dynamic-import-chunkname",
  "import/exports-last",
  "import/no-deprecated",
  "import/imports-first",
  "jest/consistent-test-it",
  "jest/lowercase-name",
  "jest/no-alias-methods",
  "jest/no-duplicate-hooks",
  "jest/no-expect-resolves",
  "jest/no-hooks",
  "jest/no-if",
  "jest/no-large-snapshots",
  "jest/no-test-return-statement",
  "jest/no-truthy-falsy",
  "jest/prefer-called-with",
  "jest/prefer-expect-assertions",
  "jest/prefer-hooks-on-top",
  "jest/prefer-inline-snapshots",
  "jest/prefer-spy-on",
  "jest/prefer-strict-equal",
  "jest/prefer-to-be-null",
  "jest/prefer-to-be-undefined",
  "jest/prefer-to-contain",
  "jest/prefer-to-have-length",
  "jest/prefer-todo",
  "jest/require-to-throw-message",
  "jest/require-top-level-describe",
  "jest/valid-title",
]
`;

exports[`ESLint rules should match defined rules for js: Applied rules 1`] = `
Object {
  "env": Object {
    "es6": true,
    "jest/globals": true,
    "node": true,
  },
  "globals": Object {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
  },
  "ignorePatterns": Array [
    "node_modules/",
  ],
  "noInlineConfig": undefined,
  "parser": StringMatching /node_modules\\\\/@typescript-eslint\\\\/parser\\\\/dist\\\\/parser\\.js/,
  "parserOptions": Object {
    "ecmaVersion": 2020,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "jest",
    "prettier",
    "@typescript-eslint",
    "import",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array",
        "readonly": "array",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-ignore": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [
          "inner_hits",
          "multi_match",
          "match_all",
          "doc_as_upsert",
        ],
        "ignoreDestructuring": false,
        "ignoreImports": false,
      },
    ],
    "@typescript-eslint/class-literal-property-style": Array [
      "error",
    ],
    "@typescript-eslint/class-name-casing": Array [
      "error",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/interface-name-prefix": Array [
      "error",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/method-signature-style": Array [
      "error",
      "property",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-base-to-string": Array [
      "error",
    ],
    "@typescript-eslint/no-dupe-class-members": Array [
      "error",
    ],
    "@typescript-eslint/no-dynamic-delete": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-require-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-type-alias": Array [
      "error",
      Object {
        "allowAliases": "always",
        "allowCallbacks": "always",
        "allowConditionalTypes": "always",
        "allowConstructors": "never",
        "allowLiterals": "in-unions",
        "allowMappedTypes": "always",
        "allowTupleTypes": "never",
      },
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-qualifier": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars-experimental": Array [
      "error",
      Object {
        "ignoreArgsIfArgsAfterAreUsed": true,
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-includes": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/prefer-nullish-coalescing": Array [
      "error",
    ],
    "@typescript-eslint/prefer-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/prefer-readonly": Array [
      "error",
    ],
    "@typescript-eslint/prefer-regexp-exec": Array [
      "error",
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": Array [
      "error",
    ],
    "@typescript-eslint/promise-function-async": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
      Object {
        "allowNumber": true,
      },
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/switch-exhaustiveness-check": Array [
      "error",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "error",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "arrow-spacing": Array [
      "error",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "callback-return": Array [
      "error",
    ],
    "camelcase": Array [
      "off",
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "error",
    ],
    "getter-return": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "handle-callback-err": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/export": Array [
      "error",
    ],
    "import/first": Array [
      "error",
    ],
    "import/named": Array [
      "error",
    ],
    "import/namespace": Array [
      "error",
    ],
    "import/newline-after-import": Array [
      "error",
    ],
    "import/no-cycle": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      "warn",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      "off",
    ],
    "import/no-named-as-default-member": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "off",
    ],
    "import/order": Array [
      "error",
      Object {
        "groups": Array [
          "builtin",
          "external",
          "internal",
          Array [
            "parent",
            "sibling",
            "index",
          ],
        ],
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": Array [
      "off",
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jest/expect-expect": Array [
      "warn",
    ],
    "jest/no-commented-out-tests": Array [
      "warn",
    ],
    "jest/no-disabled-tests": Array [
      "warn",
    ],
    "jest/no-export": Array [
      "error",
    ],
    "jest/no-focused-tests": Array [
      "error",
    ],
    "jest/no-identical-title": Array [
      "error",
    ],
    "jest/no-jasmine-globals": Array [
      "warn",
    ],
    "jest/no-jest-import": Array [
      "error",
    ],
    "jest/no-mocks-import": Array [
      "error",
    ],
    "jest/no-standalone-expect": Array [
      "error",
    ],
    "jest/no-test-callback": Array [
      "error",
    ],
    "jest/no-test-prefixes": Array [
      "error",
    ],
    "jest/no-try-expect": Array [
      "error",
    ],
    "jest/valid-describe": Array [
      "error",
    ],
    "jest/valid-expect": Array [
      "error",
    ],
    "jest/valid-expect-in-promise": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
    ],
    "no-confusing-arrow": Array [
      "off",
    ],
    "no-console": Array [
      "error",
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "error",
    ],
    "no-constructor-return": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implicit-coercion": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-requires": Array [
      "error",
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-spaces": Array [
      "error",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-process-env": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "error",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
    ],
    "no-restricted-imports": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-modules": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-return-assign": Array [
      "error",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "off",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [
          "_id",
          "_source",
        ],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "allowAfterThisConstructor": false,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
    ],
    "prefer-arrow-callback": Array [
      "error",
    ],
    "prefer-const": Array [
      "error",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "error",
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "require-atomic-updates": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "error",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
    ],
    "yoda": Array [
      "error",
      "never",
      Object {
        "exceptRange": true,
        "onlyEquality": false,
      },
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".d.ts",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": Array [
      "^@keplr/",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".d.ts",
          ".js",
          ".jsx",
        ],
      },
    },
  },
}
`;

exports[`ESLint rules should match defined rules for js: Ignored rules 1`] = `
Array [
  "accessor-pairs",
  "capitalized-comments",
  "class-methods-use-this",
  "complexity",
  "consistent-this",
  "func-name-matching",
  "func-names",
  "func-style",
  "grouped-accessor-pairs",
  "guard-for-in",
  "id-blacklist",
  "id-length",
  "id-match",
  "init-declarations",
  "line-comment-position",
  "lines-around-directive",
  "lines-between-class-members",
  "max-classes-per-file",
  "max-depth",
  "max-lines",
  "max-lines-per-function",
  "max-nested-callbacks",
  "max-params",
  "max-statements",
  "max-statements-per-line",
  "multiline-comment-style",
  "new-cap",
  "newline-after-var",
  "newline-before-return",
  "no-await-in-loop",
  "no-bitwise",
  "no-catch-shadow",
  "no-continue",
  "no-implicit-globals",
  "no-inline-comments",
  "no-invalid-this",
  "no-lonely-if",
  "no-magic-numbers",
  "no-multi-assign",
  "no-native-reassign",
  "no-negated-condition",
  "no-negated-in-lhs",
  "no-nested-ternary",
  "no-new-object",
  "no-plusplus",
  "no-process-exit",
  "no-restricted-syntax",
  "no-ternary",
  "no-unneeded-ternary",
  "no-useless-constructor",
  "no-warning-comments",
  "one-var",
  "operator-assignment",
  "prefer-destructuring",
  "prefer-exponentiation-operator",
  "prefer-named-capture-group",
  "prefer-object-spread",
  "prefer-reflect",
  "require-await",
  "require-jsdoc",
  "require-unicode-regexp",
  "sort-keys",
  "sort-vars",
  "spaced-comment",
  "valid-jsdoc",
  "@typescript-eslint/explicit-member-accessibility",
  "@typescript-eslint/explicit-module-boundary-types",
  "@typescript-eslint/generic-type-naming",
  "@typescript-eslint/member-naming",
  "@typescript-eslint/no-magic-numbers",
  "@typescript-eslint/no-parameter-properties",
  "@typescript-eslint/no-untyped-public-signature",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/typedef",
  "import/no-namespace",
  "import/extensions",
  "import/no-restricted-paths",
  "import/no-internal-modules",
  "import/group-exports",
  "import/no-relative-parent-imports",
  "import/no-self-import",
  "import/no-named-default",
  "import/no-anonymous-default-export",
  "import/no-unused-modules",
  "import/no-commonjs",
  "import/no-amd",
  "import/max-dependencies",
  "import/no-extraneous-dependencies",
  "import/no-absolute-path",
  "import/no-nodejs-modules",
  "import/no-webpack-loader-syntax",
  "import/no-default-export",
  "import/no-named-export",
  "import/no-dynamic-require",
  "import/unambiguous",
  "import/no-unassigned-import",
  "import/no-useless-path-segments",
  "import/dynamic-import-chunkname",
  "import/exports-last",
  "import/no-deprecated",
  "import/imports-first",
  "jest/consistent-test-it",
  "jest/lowercase-name",
  "jest/no-alias-methods",
  "jest/no-duplicate-hooks",
  "jest/no-expect-resolves",
  "jest/no-hooks",
  "jest/no-if",
  "jest/no-large-snapshots",
  "jest/no-test-return-statement",
  "jest/no-truthy-falsy",
  "jest/prefer-called-with",
  "jest/prefer-expect-assertions",
  "jest/prefer-hooks-on-top",
  "jest/prefer-inline-snapshots",
  "jest/prefer-spy-on",
  "jest/prefer-strict-equal",
  "jest/prefer-to-be-null",
  "jest/prefer-to-be-undefined",
  "jest/prefer-to-contain",
  "jest/prefer-to-have-length",
  "jest/prefer-todo",
  "jest/require-to-throw-message",
  "jest/require-top-level-describe",
  "jest/valid-title",
]
`;

exports[`ESLint rules should match defined rules for test.js: Applied rules 1`] = `
Object {
  "env": Object {
    "es6": true,
    "jest/globals": true,
    "node": true,
  },
  "globals": Object {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
  },
  "ignorePatterns": Array [
    "node_modules/",
  ],
  "noInlineConfig": undefined,
  "parser": StringMatching /node_modules\\\\/@typescript-eslint\\\\/parser\\\\/dist\\\\/parser\\.js/,
  "parserOptions": Object {
    "ecmaVersion": 2020,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "jest",
    "prettier",
    "@typescript-eslint",
    "import",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array",
        "readonly": "array",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "off",
    ],
    "@typescript-eslint/ban-ts-ignore": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [
          "inner_hits",
          "multi_match",
          "match_all",
          "doc_as_upsert",
        ],
        "ignoreDestructuring": false,
        "ignoreImports": false,
      },
    ],
    "@typescript-eslint/class-literal-property-style": Array [
      "error",
    ],
    "@typescript-eslint/class-name-casing": Array [
      "error",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/interface-name-prefix": Array [
      "error",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/method-signature-style": Array [
      "error",
      "property",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-base-to-string": Array [
      "error",
    ],
    "@typescript-eslint/no-dupe-class-members": Array [
      "error",
    ],
    "@typescript-eslint/no-dynamic-delete": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "off",
    ],
    "@typescript-eslint/no-require-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-type-alias": Array [
      "error",
      Object {
        "allowAliases": "always",
        "allowCallbacks": "always",
        "allowConditionalTypes": "always",
        "allowConstructors": "never",
        "allowLiterals": "in-unions",
        "allowMappedTypes": "always",
        "allowTupleTypes": "never",
      },
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-qualifier": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars-experimental": Array [
      "error",
      Object {
        "ignoreArgsIfArgsAfterAreUsed": true,
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-includes": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/prefer-nullish-coalescing": Array [
      "error",
    ],
    "@typescript-eslint/prefer-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/prefer-readonly": Array [
      "error",
    ],
    "@typescript-eslint/prefer-regexp-exec": Array [
      "error",
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": Array [
      "error",
    ],
    "@typescript-eslint/promise-function-async": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
      Object {
        "allowNumber": true,
      },
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/switch-exhaustiveness-check": Array [
      "error",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "off",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "arrow-spacing": Array [
      "error",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "callback-return": Array [
      "error",
    ],
    "camelcase": Array [
      "off",
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "error",
    ],
    "getter-return": Array [
      "error",
    ],
    "global-require": Array [
      "error",
    ],
    "handle-callback-err": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/export": Array [
      "error",
    ],
    "import/first": Array [
      "error",
    ],
    "import/named": Array [
      "error",
    ],
    "import/namespace": Array [
      "error",
    ],
    "import/newline-after-import": Array [
      "error",
    ],
    "import/no-cycle": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      "warn",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      "off",
    ],
    "import/no-named-as-default-member": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "off",
    ],
    "import/order": Array [
      "error",
      Object {
        "groups": Array [
          "builtin",
          "external",
          "internal",
          Array [
            "parent",
            "sibling",
            "index",
          ],
        ],
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": Array [
      "off",
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jest/expect-expect": Array [
      "warn",
    ],
    "jest/no-commented-out-tests": Array [
      "warn",
    ],
    "jest/no-disabled-tests": Array [
      "warn",
    ],
    "jest/no-export": Array [
      "error",
    ],
    "jest/no-focused-tests": Array [
      "error",
    ],
    "jest/no-identical-title": Array [
      "error",
    ],
    "jest/no-jasmine-globals": Array [
      "warn",
    ],
    "jest/no-jest-import": Array [
      "error",
    ],
    "jest/no-mocks-import": Array [
      "error",
    ],
    "jest/no-standalone-expect": Array [
      "error",
    ],
    "jest/no-test-callback": Array [
      "error",
    ],
    "jest/no-test-prefixes": Array [
      "error",
    ],
    "jest/no-try-expect": Array [
      "error",
    ],
    "jest/valid-describe": Array [
      "error",
    ],
    "jest/valid-expect": Array [
      "error",
    ],
    "jest/valid-expect-in-promise": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
    ],
    "no-confusing-arrow": Array [
      "off",
    ],
    "no-console": Array [
      "error",
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "error",
    ],
    "no-constructor-return": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implicit-coercion": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-requires": Array [
      "error",
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-spaces": Array [
      "error",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-process-env": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "error",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
    ],
    "no-restricted-imports": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-modules": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-return-assign": Array [
      "error",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "off",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [
          "_id",
          "_source",
        ],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "allowAfterThisConstructor": false,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
    ],
    "prefer-arrow-callback": Array [
      "error",
    ],
    "prefer-const": Array [
      "error",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "error",
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "require-atomic-updates": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "error",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
    ],
    "yoda": Array [
      "error",
      "never",
      Object {
        "exceptRange": true,
        "onlyEquality": false,
      },
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".d.ts",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": Array [
      "^@keplr/",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".d.ts",
          ".js",
          ".jsx",
        ],
      },
    },
  },
}
`;

exports[`ESLint rules should match defined rules for test.js: Ignored rules 1`] = `
Array [
  "accessor-pairs",
  "capitalized-comments",
  "class-methods-use-this",
  "complexity",
  "consistent-this",
  "func-name-matching",
  "func-names",
  "func-style",
  "grouped-accessor-pairs",
  "guard-for-in",
  "id-blacklist",
  "id-length",
  "id-match",
  "init-declarations",
  "line-comment-position",
  "lines-around-directive",
  "lines-between-class-members",
  "max-classes-per-file",
  "max-depth",
  "max-lines",
  "max-lines-per-function",
  "max-nested-callbacks",
  "max-params",
  "max-statements",
  "max-statements-per-line",
  "multiline-comment-style",
  "new-cap",
  "newline-after-var",
  "newline-before-return",
  "no-await-in-loop",
  "no-bitwise",
  "no-catch-shadow",
  "no-continue",
  "no-implicit-globals",
  "no-inline-comments",
  "no-invalid-this",
  "no-lonely-if",
  "no-magic-numbers",
  "no-multi-assign",
  "no-native-reassign",
  "no-negated-condition",
  "no-negated-in-lhs",
  "no-nested-ternary",
  "no-new-object",
  "no-plusplus",
  "no-process-exit",
  "no-restricted-syntax",
  "no-ternary",
  "no-unneeded-ternary",
  "no-useless-constructor",
  "no-warning-comments",
  "one-var",
  "operator-assignment",
  "prefer-destructuring",
  "prefer-exponentiation-operator",
  "prefer-named-capture-group",
  "prefer-object-spread",
  "prefer-reflect",
  "require-await",
  "require-jsdoc",
  "require-unicode-regexp",
  "sort-keys",
  "sort-vars",
  "spaced-comment",
  "valid-jsdoc",
  "@typescript-eslint/explicit-member-accessibility",
  "@typescript-eslint/explicit-module-boundary-types",
  "@typescript-eslint/generic-type-naming",
  "@typescript-eslint/member-naming",
  "@typescript-eslint/no-magic-numbers",
  "@typescript-eslint/no-parameter-properties",
  "@typescript-eslint/no-untyped-public-signature",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/typedef",
  "import/no-namespace",
  "import/extensions",
  "import/no-restricted-paths",
  "import/no-internal-modules",
  "import/group-exports",
  "import/no-relative-parent-imports",
  "import/no-self-import",
  "import/no-named-default",
  "import/no-anonymous-default-export",
  "import/no-unused-modules",
  "import/no-commonjs",
  "import/no-amd",
  "import/max-dependencies",
  "import/no-extraneous-dependencies",
  "import/no-absolute-path",
  "import/no-nodejs-modules",
  "import/no-webpack-loader-syntax",
  "import/no-default-export",
  "import/no-named-export",
  "import/no-dynamic-require",
  "import/unambiguous",
  "import/no-unassigned-import",
  "import/no-useless-path-segments",
  "import/dynamic-import-chunkname",
  "import/exports-last",
  "import/no-deprecated",
  "import/imports-first",
  "jest/consistent-test-it",
  "jest/lowercase-name",
  "jest/no-alias-methods",
  "jest/no-duplicate-hooks",
  "jest/no-expect-resolves",
  "jest/no-hooks",
  "jest/no-if",
  "jest/no-large-snapshots",
  "jest/no-test-return-statement",
  "jest/no-truthy-falsy",
  "jest/prefer-called-with",
  "jest/prefer-expect-assertions",
  "jest/prefer-hooks-on-top",
  "jest/prefer-inline-snapshots",
  "jest/prefer-spy-on",
  "jest/prefer-strict-equal",
  "jest/prefer-to-be-null",
  "jest/prefer-to-be-undefined",
  "jest/prefer-to-contain",
  "jest/prefer-to-have-length",
  "jest/prefer-todo",
  "jest/require-to-throw-message",
  "jest/require-top-level-describe",
  "jest/valid-title",
]
`;

exports[`ESLint rules should match defined rules for test.ts: Applied rules 1`] = `
Object {
  "env": Object {
    "es6": true,
    "jest/globals": true,
    "node": true,
  },
  "globals": Object {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
  },
  "ignorePatterns": Array [
    "node_modules/",
  ],
  "noInlineConfig": undefined,
  "parser": StringMatching /node_modules\\\\/@typescript-eslint\\\\/parser\\\\/dist\\\\/parser\\.js/,
  "parserOptions": Object {
    "ecmaVersion": 2020,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "jest",
    "prettier",
    "@typescript-eslint",
    "import",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array",
        "readonly": "array",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "off",
    ],
    "@typescript-eslint/ban-ts-ignore": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [
          "inner_hits",
          "multi_match",
          "match_all",
          "doc_as_upsert",
        ],
        "ignoreDestructuring": false,
        "ignoreImports": false,
      },
    ],
    "@typescript-eslint/class-literal-property-style": Array [
      "error",
    ],
    "@typescript-eslint/class-name-casing": Array [
      "error",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/interface-name-prefix": Array [
      "error",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/method-signature-style": Array [
      "error",
      "property",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-base-to-string": Array [
      "error",
    ],
    "@typescript-eslint/no-dupe-class-members": Array [
      "error",
    ],
    "@typescript-eslint/no-dynamic-delete": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "off",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "off",
    ],
    "@typescript-eslint/no-require-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-type-alias": Array [
      "error",
      Object {
        "allowAliases": "always",
        "allowCallbacks": "always",
        "allowConditionalTypes": "always",
        "allowConstructors": "never",
        "allowLiterals": "in-unions",
        "allowMappedTypes": "always",
        "allowTupleTypes": "never",
      },
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-qualifier": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars-experimental": Array [
      "error",
      Object {
        "ignoreArgsIfArgsAfterAreUsed": true,
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-includes": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/prefer-nullish-coalescing": Array [
      "error",
    ],
    "@typescript-eslint/prefer-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/prefer-readonly": Array [
      "error",
    ],
    "@typescript-eslint/prefer-regexp-exec": Array [
      "error",
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": Array [
      "error",
    ],
    "@typescript-eslint/promise-function-async": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
      Object {
        "allowNumber": true,
      },
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/switch-exhaustiveness-check": Array [
      "error",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "off",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "arrow-spacing": Array [
      "error",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "callback-return": Array [
      "error",
    ],
    "camelcase": Array [
      "off",
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "error",
    ],
    "getter-return": Array [
      "off",
    ],
    "global-require": Array [
      "error",
    ],
    "handle-callback-err": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/export": Array [
      "error",
    ],
    "import/first": Array [
      "error",
    ],
    "import/named": Array [
      "error",
    ],
    "import/namespace": Array [
      "error",
    ],
    "import/newline-after-import": Array [
      "error",
    ],
    "import/no-cycle": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      "warn",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      "off",
    ],
    "import/no-named-as-default-member": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "off",
    ],
    "import/order": Array [
      "error",
      Object {
        "groups": Array [
          "builtin",
          "external",
          "internal",
          Array [
            "parent",
            "sibling",
            "index",
          ],
        ],
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": Array [
      "off",
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jest/expect-expect": Array [
      "warn",
    ],
    "jest/no-commented-out-tests": Array [
      "warn",
    ],
    "jest/no-disabled-tests": Array [
      "warn",
    ],
    "jest/no-export": Array [
      "error",
    ],
    "jest/no-focused-tests": Array [
      "error",
    ],
    "jest/no-identical-title": Array [
      "error",
    ],
    "jest/no-jasmine-globals": Array [
      "warn",
    ],
    "jest/no-jest-import": Array [
      "error",
    ],
    "jest/no-mocks-import": Array [
      "error",
    ],
    "jest/no-standalone-expect": Array [
      "error",
    ],
    "jest/no-test-callback": Array [
      "error",
    ],
    "jest/no-test-prefixes": Array [
      "error",
    ],
    "jest/no-try-expect": Array [
      "error",
    ],
    "jest/valid-describe": Array [
      "error",
    ],
    "jest/valid-expect": Array [
      "error",
    ],
    "jest/valid-expect-in-promise": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
    ],
    "no-confusing-arrow": Array [
      "off",
    ],
    "no-console": Array [
      "error",
    ],
    "no-const-assign": Array [
      "off",
    ],
    "no-constant-condition": Array [
      "error",
    ],
    "no-constructor-return": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "off",
    ],
    "no-dupe-class-members": Array [
      "off",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "off",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implicit-coercion": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-requires": Array [
      "error",
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-spaces": Array [
      "error",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "off",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-process-env": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "off",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
    ],
    "no-restricted-imports": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-modules": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-return-assign": Array [
      "error",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "off",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "off",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "off",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [
          "_id",
          "_source",
        ],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "allowAfterThisConstructor": false,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unreachable": Array [
      "off",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
    ],
    "prefer-arrow-callback": Array [
      "error",
    ],
    "prefer-const": Array [
      "error",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "error",
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "require-atomic-updates": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "off",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
    ],
    "yoda": Array [
      "error",
      "never",
      Object {
        "exceptRange": true,
        "onlyEquality": false,
      },
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".d.ts",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": Array [
      "^@keplr/",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".d.ts",
          ".js",
          ".jsx",
        ],
      },
    },
  },
}
`;

exports[`ESLint rules should match defined rules for test.ts: Ignored rules 1`] = `
Array [
  "accessor-pairs",
  "capitalized-comments",
  "class-methods-use-this",
  "complexity",
  "consistent-this",
  "func-name-matching",
  "func-names",
  "func-style",
  "grouped-accessor-pairs",
  "guard-for-in",
  "id-blacklist",
  "id-length",
  "id-match",
  "init-declarations",
  "line-comment-position",
  "lines-around-directive",
  "lines-between-class-members",
  "max-classes-per-file",
  "max-depth",
  "max-lines",
  "max-lines-per-function",
  "max-nested-callbacks",
  "max-params",
  "max-statements",
  "max-statements-per-line",
  "multiline-comment-style",
  "new-cap",
  "newline-after-var",
  "newline-before-return",
  "no-await-in-loop",
  "no-bitwise",
  "no-catch-shadow",
  "no-continue",
  "no-implicit-globals",
  "no-inline-comments",
  "no-invalid-this",
  "no-lonely-if",
  "no-magic-numbers",
  "no-multi-assign",
  "no-native-reassign",
  "no-negated-condition",
  "no-negated-in-lhs",
  "no-nested-ternary",
  "no-new-object",
  "no-plusplus",
  "no-process-exit",
  "no-restricted-syntax",
  "no-ternary",
  "no-unneeded-ternary",
  "no-useless-constructor",
  "no-warning-comments",
  "one-var",
  "operator-assignment",
  "prefer-destructuring",
  "prefer-exponentiation-operator",
  "prefer-named-capture-group",
  "prefer-object-spread",
  "prefer-reflect",
  "require-await",
  "require-jsdoc",
  "require-unicode-regexp",
  "sort-keys",
  "sort-vars",
  "spaced-comment",
  "valid-jsdoc",
  "@typescript-eslint/explicit-member-accessibility",
  "@typescript-eslint/explicit-module-boundary-types",
  "@typescript-eslint/generic-type-naming",
  "@typescript-eslint/member-naming",
  "@typescript-eslint/no-magic-numbers",
  "@typescript-eslint/no-parameter-properties",
  "@typescript-eslint/no-untyped-public-signature",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/typedef",
  "import/no-namespace",
  "import/extensions",
  "import/no-restricted-paths",
  "import/no-internal-modules",
  "import/group-exports",
  "import/no-relative-parent-imports",
  "import/no-self-import",
  "import/no-named-default",
  "import/no-anonymous-default-export",
  "import/no-unused-modules",
  "import/no-commonjs",
  "import/no-amd",
  "import/max-dependencies",
  "import/no-extraneous-dependencies",
  "import/no-absolute-path",
  "import/no-nodejs-modules",
  "import/no-webpack-loader-syntax",
  "import/no-default-export",
  "import/no-named-export",
  "import/no-dynamic-require",
  "import/unambiguous",
  "import/no-unassigned-import",
  "import/no-useless-path-segments",
  "import/dynamic-import-chunkname",
  "import/exports-last",
  "import/no-deprecated",
  "import/imports-first",
  "jest/consistent-test-it",
  "jest/lowercase-name",
  "jest/no-alias-methods",
  "jest/no-duplicate-hooks",
  "jest/no-expect-resolves",
  "jest/no-hooks",
  "jest/no-if",
  "jest/no-large-snapshots",
  "jest/no-test-return-statement",
  "jest/no-truthy-falsy",
  "jest/prefer-called-with",
  "jest/prefer-expect-assertions",
  "jest/prefer-hooks-on-top",
  "jest/prefer-inline-snapshots",
  "jest/prefer-spy-on",
  "jest/prefer-strict-equal",
  "jest/prefer-to-be-null",
  "jest/prefer-to-be-undefined",
  "jest/prefer-to-contain",
  "jest/prefer-to-have-length",
  "jest/prefer-todo",
  "jest/require-to-throw-message",
  "jest/require-top-level-describe",
  "jest/valid-title",
]
`;

exports[`ESLint rules should match defined rules for ts: Applied rules 1`] = `
Object {
  "env": Object {
    "es6": true,
    "jest/globals": true,
    "node": true,
  },
  "globals": Object {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
  },
  "ignorePatterns": Array [
    "node_modules/",
  ],
  "noInlineConfig": undefined,
  "parser": StringMatching /node_modules\\\\/@typescript-eslint\\\\/parser\\\\/dist\\\\/parser\\.js/,
  "parserOptions": Object {
    "ecmaVersion": 2020,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "jest",
    "prettier",
    "@typescript-eslint",
    "import",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": Array [
      "error",
    ],
    "@typescript-eslint/array-type": Array [
      "error",
      Object {
        "default": "array",
        "readonly": "array",
      },
    ],
    "@typescript-eslint/await-thenable": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-comment": Array [
      "error",
    ],
    "@typescript-eslint/ban-ts-ignore": Array [
      "error",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
    ],
    "@typescript-eslint/brace-style": Array [
      "off",
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [
          "inner_hits",
          "multi_match",
          "match_all",
          "doc_as_upsert",
        ],
        "ignoreDestructuring": false,
        "ignoreImports": false,
      },
    ],
    "@typescript-eslint/class-literal-property-style": Array [
      "error",
    ],
    "@typescript-eslint/class-name-casing": Array [
      "error",
    ],
    "@typescript-eslint/comma-spacing": Array [
      "off",
    ],
    "@typescript-eslint/consistent-type-assertions": Array [
      "error",
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
    ],
    "@typescript-eslint/default-param-last": Array [
      "error",
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
    ],
    "@typescript-eslint/func-call-spacing": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/interface-name-prefix": Array [
      "error",
    ],
    "@typescript-eslint/member-delimiter-style": Array [
      "off",
    ],
    "@typescript-eslint/member-ordering": Array [
      "error",
    ],
    "@typescript-eslint/method-signature-style": Array [
      "error",
      "property",
    ],
    "@typescript-eslint/naming-convention": Array [
      "error",
    ],
    "@typescript-eslint/no-array-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-base-to-string": Array [
      "error",
    ],
    "@typescript-eslint/no-dupe-class-members": Array [
      "error",
    ],
    "@typescript-eslint/no-dynamic-delete": Array [
      "error",
    ],
    "@typescript-eslint/no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "@typescript-eslint/no-empty-interface": Array [
      "error",
    ],
    "@typescript-eslint/no-explicit-any": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-extra-parens": Array [
      "off",
    ],
    "@typescript-eslint/no-extra-semi": Array [
      "off",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-for-in-array": Array [
      "error",
    ],
    "@typescript-eslint/no-implied-eval": Array [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-new": Array [
      "error",
    ],
    "@typescript-eslint/no-misused-promises": Array [
      "error",
    ],
    "@typescript-eslint/no-namespace": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/no-non-null-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-require-imports": Array [
      "error",
    ],
    "@typescript-eslint/no-this-alias": Array [
      "error",
    ],
    "@typescript-eslint/no-throw-literal": Array [
      "error",
    ],
    "@typescript-eslint/no-type-alias": Array [
      "error",
      Object {
        "allowAliases": "always",
        "allowCallbacks": "always",
        "allowConditionalTypes": "always",
        "allowConstructors": "never",
        "allowLiterals": "in-unions",
        "allowMappedTypes": "always",
        "allowTupleTypes": "never",
      },
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-condition": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-qualifier": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": Array [
      "error",
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-call": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-member-access": Array [
      "error",
    ],
    "@typescript-eslint/no-unsafe-return": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-expressions": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
    ],
    "@typescript-eslint/no-unused-vars-experimental": Array [
      "error",
      Object {
        "ignoreArgsIfArgsAfterAreUsed": true,
      },
    ],
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": Array [
      "error",
    ],
    "@typescript-eslint/no-var-requires": Array [
      "error",
    ],
    "@typescript-eslint/prefer-as-const": Array [
      "error",
    ],
    "@typescript-eslint/prefer-for-of": Array [
      "error",
    ],
    "@typescript-eslint/prefer-function-type": Array [
      "error",
    ],
    "@typescript-eslint/prefer-includes": Array [
      "error",
    ],
    "@typescript-eslint/prefer-namespace-keyword": Array [
      "error",
    ],
    "@typescript-eslint/prefer-nullish-coalescing": Array [
      "error",
    ],
    "@typescript-eslint/prefer-optional-chain": Array [
      "error",
    ],
    "@typescript-eslint/prefer-readonly": Array [
      "error",
    ],
    "@typescript-eslint/prefer-regexp-exec": Array [
      "error",
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": Array [
      "error",
    ],
    "@typescript-eslint/promise-function-async": Array [
      "off",
    ],
    "@typescript-eslint/quotes": Array [
      0,
    ],
    "@typescript-eslint/require-await": Array [
      "error",
    ],
    "@typescript-eslint/restrict-plus-operands": Array [
      "error",
    ],
    "@typescript-eslint/restrict-template-expressions": Array [
      "error",
      Object {
        "allowNumber": true,
      },
    ],
    "@typescript-eslint/return-await": Array [
      "error",
    ],
    "@typescript-eslint/semi": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/space-before-function-paren": Array [
      "off",
    ],
    "@typescript-eslint/switch-exhaustiveness-check": Array [
      "error",
    ],
    "@typescript-eslint/triple-slash-reference": Array [
      "error",
    ],
    "@typescript-eslint/type-annotation-spacing": Array [
      "off",
    ],
    "@typescript-eslint/unbound-method": Array [
      "error",
    ],
    "@typescript-eslint/unified-signatures": Array [
      "error",
    ],
    "array-bracket-newline": Array [
      "off",
    ],
    "array-bracket-spacing": Array [
      "off",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": Array [
      "off",
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
    ],
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "arrow-spacing": Array [
      "error",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "off",
    ],
    "brace-style": Array [
      "off",
    ],
    "callback-return": Array [
      "error",
    ],
    "camelcase": Array [
      "off",
    ],
    "comma-dangle": Array [
      "off",
    ],
    "comma-spacing": Array [
      "off",
    ],
    "comma-style": Array [
      "off",
    ],
    "computed-property-spacing": Array [
      "off",
    ],
    "consistent-return": Array [
      "error",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": Array [
      "error",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
    ],
    "eol-last": Array [
      "off",
    ],
    "eqeqeq": Array [
      "error",
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "off",
    ],
    "function-call-argument-newline": Array [
      "off",
    ],
    "function-paren-newline": Array [
      "off",
    ],
    "generator-star": Array [
      "off",
    ],
    "generator-star-spacing": Array [
      "error",
    ],
    "getter-return": Array [
      "off",
    ],
    "global-require": Array [
      "error",
    ],
    "handle-callback-err": Array [
      "error",
    ],
    "implicit-arrow-linebreak": Array [
      "off",
    ],
    "import/default": Array [
      "off",
    ],
    "import/export": Array [
      "error",
    ],
    "import/first": Array [
      "error",
    ],
    "import/named": Array [
      "error",
    ],
    "import/namespace": Array [
      "error",
    ],
    "import/newline-after-import": Array [
      "error",
    ],
    "import/no-cycle": Array [
      "error",
    ],
    "import/no-duplicates": Array [
      "warn",
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      "off",
    ],
    "import/no-named-as-default-member": Array [
      "error",
    ],
    "import/no-unresolved": Array [
      "off",
    ],
    "import/order": Array [
      "error",
      Object {
        "groups": Array [
          "builtin",
          "external",
          "internal",
          Array [
            "parent",
            "sibling",
            "index",
          ],
        ],
        "newlines-between": "always",
      },
    ],
    "import/prefer-default-export": Array [
      "off",
    ],
    "indent": Array [
      "off",
    ],
    "indent-legacy": Array [
      "off",
    ],
    "jest/expect-expect": Array [
      "warn",
    ],
    "jest/no-commented-out-tests": Array [
      "warn",
    ],
    "jest/no-disabled-tests": Array [
      "warn",
    ],
    "jest/no-export": Array [
      "error",
    ],
    "jest/no-focused-tests": Array [
      "error",
    ],
    "jest/no-identical-title": Array [
      "error",
    ],
    "jest/no-jasmine-globals": Array [
      "warn",
    ],
    "jest/no-jest-import": Array [
      "error",
    ],
    "jest/no-mocks-import": Array [
      "error",
    ],
    "jest/no-standalone-expect": Array [
      "error",
    ],
    "jest/no-test-callback": Array [
      "error",
    ],
    "jest/no-test-prefixes": Array [
      "error",
    ],
    "jest/no-try-expect": Array [
      "error",
    ],
    "jest/valid-describe": Array [
      "error",
    ],
    "jest/valid-expect": Array [
      "error",
    ],
    "jest/valid-expect-in-promise": Array [
      "error",
    ],
    "jsx-quotes": Array [
      "off",
    ],
    "key-spacing": Array [
      "off",
    ],
    "keyword-spacing": Array [
      "off",
    ],
    "linebreak-style": Array [
      "off",
    ],
    "lines-around-comment": Array [
      0,
    ],
    "max-len": Array [
      0,
    ],
    "multiline-ternary": Array [
      "off",
    ],
    "new-parens": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "off",
    ],
    "no-alert": Array [
      "error",
    ],
    "no-array-constructor": Array [
      "off",
    ],
    "no-arrow-condition": Array [
      "off",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-comma-dangle": Array [
      "off",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
    ],
    "no-confusing-arrow": Array [
      "off",
    ],
    "no-console": Array [
      "error",
    ],
    "no-const-assign": Array [
      "off",
    ],
    "no-constant-condition": Array [
      "error",
    ],
    "no-constructor-return": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "error",
    ],
    "no-dupe-args": Array [
      "off",
    ],
    "no-dupe-class-members": Array [
      "off",
    ],
    "no-dupe-else-if": Array [
      "error",
    ],
    "no-dupe-keys": Array [
      "off",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "error",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "off",
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "error",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
    ],
    "no-extra-semi": Array [
      "off",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
    ],
    "no-implicit-coercion": Array [
      "error",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "error",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      0,
    ],
    "no-mixed-requires": Array [
      "error",
    ],
    "no-mixed-spaces-and-tabs": Array [
      "off",
    ],
    "no-multi-spaces": Array [
      "error",
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "off",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "off",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "error",
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-process-env": Array [
      "error",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "off",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-reserved-keys": Array [
      "off",
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
    ],
    "no-restricted-imports": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-modules": Array [
      "error",
      Object {
        "patterns": Array [
          "lodash/*",
          "@keplr/*/*",
        ],
      },
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-return-assign": Array [
      "error",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "error",
    ],
    "no-shadow": Array [
      "error",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-space-before-semi": Array [
      "off",
    ],
    "no-spaced-func": Array [
      "off",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-sync": Array [
      "error",
      Object {
        "allowAtRootLevel": true,
      },
    ],
    "no-tabs": Array [
      0,
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-this-before-super": Array [
      "off",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "off",
    ],
    "no-undef": Array [
      "off",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "off",
    ],
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [
          "_id",
          "_source",
        ],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "allowAfterThisConstructor": false,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": Array [
      0,
    ],
    "no-unmodified-loop-condition": Array [
      "error",
    ],
    "no-unreachable": Array [
      "off",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "off",
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "off",
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "variables": true,
      },
    ],
    "no-useless-call": Array [
      "error",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
    ],
    "no-whitespace-before-property": Array [
      "off",
    ],
    "no-with": Array [
      "error",
    ],
    "no-wrap-func": Array [
      "off",
    ],
    "nonblock-statement-body-position": Array [
      "off",
    ],
    "object-curly-newline": Array [
      "off",
    ],
    "object-curly-spacing": Array [
      "off",
    ],
    "object-property-newline": Array [
      "off",
    ],
    "object-shorthand": Array [
      "error",
    ],
    "one-var-declaration-per-line": Array [
      "off",
    ],
    "operator-linebreak": Array [
      "off",
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
    ],
    "prefer-arrow-callback": Array [
      "error",
    ],
    "prefer-const": Array [
      "error",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
    ],
    "prefer-regex-literals": Array [
      "error",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "prettier/prettier": Array [
      "error",
    ],
    "quote-props": Array [
      "off",
    ],
    "quotes": Array [
      0,
    ],
    "radix": Array [
      "error",
    ],
    "require-atomic-updates": Array [
      "error",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
    ],
    "semi": Array [
      "off",
    ],
    "semi-spacing": Array [
      "off",
    ],
    "semi-style": Array [
      "off",
    ],
    "sort-imports": Array [
      "off",
    ],
    "space-after-function-name": Array [
      "off",
    ],
    "space-after-keywords": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "off",
    ],
    "space-before-function-paren": Array [
      "off",
    ],
    "space-before-function-parentheses": Array [
      "off",
    ],
    "space-before-keywords": Array [
      "off",
    ],
    "space-in-brackets": Array [
      "off",
    ],
    "space-in-parens": Array [
      "off",
    ],
    "space-infix-ops": Array [
      "off",
    ],
    "space-return-throw-case": Array [
      "off",
    ],
    "space-unary-ops": Array [
      "off",
    ],
    "space-unary-word-ops": Array [
      "off",
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "off",
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
    ],
    "template-tag-spacing": Array [
      "off",
    ],
    "unicode-bom": Array [
      "off",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-typeof": Array [
      "off",
    ],
    "vars-on-top": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
    ],
    "yoda": Array [
      "error",
      "never",
      Object {
        "exceptRange": true,
        "onlyEquality": false,
      },
    ],
  },
  "settings": Object {
    "import/extensions": Array [
      ".ts",
      ".tsx",
      ".d.ts",
      ".js",
      ".jsx",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": Array [
      "^@keplr/",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".ts",
          ".tsx",
          ".d.ts",
          ".js",
          ".jsx",
        ],
      },
    },
  },
}
`;

exports[`ESLint rules should match defined rules for ts: Ignored rules 1`] = `
Array [
  "accessor-pairs",
  "capitalized-comments",
  "class-methods-use-this",
  "complexity",
  "consistent-this",
  "func-name-matching",
  "func-names",
  "func-style",
  "grouped-accessor-pairs",
  "guard-for-in",
  "id-blacklist",
  "id-length",
  "id-match",
  "init-declarations",
  "line-comment-position",
  "lines-around-directive",
  "lines-between-class-members",
  "max-classes-per-file",
  "max-depth",
  "max-lines",
  "max-lines-per-function",
  "max-nested-callbacks",
  "max-params",
  "max-statements",
  "max-statements-per-line",
  "multiline-comment-style",
  "new-cap",
  "newline-after-var",
  "newline-before-return",
  "no-await-in-loop",
  "no-bitwise",
  "no-catch-shadow",
  "no-continue",
  "no-implicit-globals",
  "no-inline-comments",
  "no-invalid-this",
  "no-lonely-if",
  "no-magic-numbers",
  "no-multi-assign",
  "no-native-reassign",
  "no-negated-condition",
  "no-negated-in-lhs",
  "no-nested-ternary",
  "no-new-object",
  "no-plusplus",
  "no-process-exit",
  "no-restricted-syntax",
  "no-ternary",
  "no-unneeded-ternary",
  "no-useless-constructor",
  "no-warning-comments",
  "one-var",
  "operator-assignment",
  "prefer-destructuring",
  "prefer-exponentiation-operator",
  "prefer-named-capture-group",
  "prefer-object-spread",
  "prefer-reflect",
  "require-await",
  "require-jsdoc",
  "require-unicode-regexp",
  "sort-keys",
  "sort-vars",
  "spaced-comment",
  "valid-jsdoc",
  "@typescript-eslint/explicit-member-accessibility",
  "@typescript-eslint/explicit-module-boundary-types",
  "@typescript-eslint/generic-type-naming",
  "@typescript-eslint/member-naming",
  "@typescript-eslint/no-magic-numbers",
  "@typescript-eslint/no-parameter-properties",
  "@typescript-eslint/no-untyped-public-signature",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/typedef",
  "import/no-namespace",
  "import/extensions",
  "import/no-restricted-paths",
  "import/no-internal-modules",
  "import/group-exports",
  "import/no-relative-parent-imports",
  "import/no-self-import",
  "import/no-named-default",
  "import/no-anonymous-default-export",
  "import/no-unused-modules",
  "import/no-commonjs",
  "import/no-amd",
  "import/max-dependencies",
  "import/no-extraneous-dependencies",
  "import/no-absolute-path",
  "import/no-nodejs-modules",
  "import/no-webpack-loader-syntax",
  "import/no-default-export",
  "import/no-named-export",
  "import/no-dynamic-require",
  "import/unambiguous",
  "import/no-unassigned-import",
  "import/no-useless-path-segments",
  "import/dynamic-import-chunkname",
  "import/exports-last",
  "import/no-deprecated",
  "import/imports-first",
  "jest/consistent-test-it",
  "jest/lowercase-name",
  "jest/no-alias-methods",
  "jest/no-duplicate-hooks",
  "jest/no-expect-resolves",
  "jest/no-hooks",
  "jest/no-if",
  "jest/no-large-snapshots",
  "jest/no-test-return-statement",
  "jest/no-truthy-falsy",
  "jest/prefer-called-with",
  "jest/prefer-expect-assertions",
  "jest/prefer-hooks-on-top",
  "jest/prefer-inline-snapshots",
  "jest/prefer-spy-on",
  "jest/prefer-strict-equal",
  "jest/prefer-to-be-null",
  "jest/prefer-to-be-undefined",
  "jest/prefer-to-contain",
  "jest/prefer-to-have-length",
  "jest/prefer-todo",
  "jest/require-to-throw-message",
  "jest/require-top-level-describe",
  "jest/valid-title",
]
`;
